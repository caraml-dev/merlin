deployment:
  replicaCount: 1
  podLabels:
    environment: e2e
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits: ~
config:
  Environment: dev
  LoggerDestinationURL: "http://message-dumper.mlp.svc.cluster.local"
  MlpAPIConfig:
    APIHost: http://mlp:8080
    EncryptionKey: password
  StandardTransformerConfig:
    ImageName: ghcr.io/caraml-dev/merlin-transformer:0.31.3
  AuthorizationConfig:
    AuthorizationEnabled: false
imageBuilder:
  serviceAccount:
    create: true
    name: "kaniko"
    annotations: {}
    labels: {}
  clusterName: "merlin-cluster"
  k8sConfig: {}
  builderConfig:
    BaseImages:
      3.7.*:
        ImageName: pyfunc-py37:v0.31.3
        DockerfilePath: "docker/Dockerfile"
        BuildContextURI: "git://github.com/gojek/merlin.git#refs/tags/v0.31.3"
        MainAppPath: /merlin-spark-app/main.py
    PredictionJobBaseImages:
      3.7.*:
        ImageName: pyspark-py37:v0.31.3
        DockerfilePath: "docker/app.Dockerfile"
        BuildContextURI: "git://github.com/gojek/merlin.git#refs/tags/v0.31.3"
        MainAppPath: /merlin-spark-app/main.py
    BuildNamespace: "mlp"
    BuildContextURI: git://github.com/caraml-dev/merlin.git#refs/heads/main
    PredictionJobContextSubPath: "python/batch-predictor"
    PredictionJobBuildContextURI: git://github.com/caraml-dev/merlin.git#refs/heads/main
    DockerRegistry: "dockerRegistry"
    BuildTimeout: "10m"
    KanikoImage: "gcr.io/kaniko-project/executor:v1.6.0"
    Resources:
      Requests:
        CPU: "1"
        Memory: 512Mi
      Limits:
        CPU: "1"
        Memory: 1Gi
    Tolerations: []
    NodeSelectors: {}
    MaximumRetry: 3
    KanikoServiceAccount: "kaniko"
    Retention: "48h"
    SafeToEvict: false
environmentConfigs:
  - name: dev
    is_default: true
    cluster: merlin-cluster
    region: id
    gcp_project: gcp-project
    deployment_timeout: 5m
    namespace_timeout: 2m
    max_cpu: 250m
    max_memory: 512Mi
    queue_resource_percentage: 20
    is_prediction_job_enabled: true
    is_default_prediction_job: true
    default_prediction_job_config:
      executor_replica: 1
      driver_cpu_request: 25m
      driver_memory_request: 128Mi
      executor_cpu_request: 25m
      executor_memory_request: 128Mi
    default_deployment_config:
      min_replica: 0
      max_replica: 1
      cpu_request: "50m"
      memory_request: "128Mi"
    default_transformer_config:
      min_replica: 0
      max_replica: 1
      cpu_request: "25m"
      memory_request: "64Mi"
    gpus: []
ingress:
  enabled: true
  class: istio
  path: /
merlin-postgresql:
  enabled: true
  postgresqlUsername: merlin
  postgresqlDatabase: merlin
  postgresqlPassword: merlin
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits: ~
  persistence:
    enabled: false
mlflow:
  trackingURL: "http://merlin-mlflow"
  artifactServiceType: "nop"
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits: ~
  artifactRoot: s3://mlflow
  ingress:
    enabled: true
    class: istio
    path: /
  extraEnvs:
    AWS_ACCESS_KEY_ID: YOURACCESSKEY
    AWS_SECRET_ACCESS_KEY: YOURSECRETKEY
    AWS_DEFAULT_REGION: ap-southeast-2
    MLFLOW_S3_ENDPOINT_URL: http://minio.minio.svc.cluster.local:9000
mlflow-postgresql:
  enabled: true
  postgresqlUsername: mlflow
  postgresqlDatabase: mlflow
  postgresqlPassword: mlflow
  replicaCount: 1
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits: ~
  persistence:
    enabled: false
swagger:
  enabled: false
minio:
  enabled: false
kserve:
  enabled: false
mlp:
  enabled: true
  fullnameOverride: mlp
  ingress:
    enabled: true
    class: istio
  postgresql:
    resources:
      requests:
        cpu: 25m
        memory: 64Mi
      limits: ~
