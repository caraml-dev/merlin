merlin:
  environment: dev
  loggerDestinationURL: "http://message-dumper.mlp.svc.cluster.local"
  image:
    tag: 0.7.0
  replicaCount: 1
  resources:
    requests:
      cpu: 25m
      memory: 128Mi
    limits:
      memory: 256Mi
  service:
    externalPort: 8080
    internalPort: 8080
  mlpApi:
    encryptionKey: password
  sentry:
    enabled: false
  newrelic:
    enabled: false
  authorization:
    enabled: false

  environmentConfigs:
  - name: dev
    is_default: true
    cluster: dev
    region: id
    gcp_project: gcp-project
    deployment_timeout: 10m
    namespace_timeout: 2m
    max_cpu: 250m
    max_memory: 256Mi
    queue_resource_percentage: 20
    is_prediction_job_enabled: true
    is_default_prediction_job: true
    default_prediction_job_config:
      executor_replica: 1
      driver_cpu_request: 25m
      driver_memory_request: 128Mi
      executor_cpu_request: 25m
      executor_memory_request: 128Mi
    default_deployment_config:
      min_replica: 0
      max_replica: 1
      cpu_request: "25m"
      memory_request: "128Mi"
    default_transformer_config:
      min_replica: 0
      max_replica: 1
      cpu_request: "25m"
      memory_request: "128Mi"


  imageBuilder:
    clusterName: "dev"

  transformer:
    feast:
      servingURL: serving.feast.dev
      coreURL: core.feast.dev
    image: merlin-transformer:1.0.0

  mlflow:
    # This should be the actual DNS registered
    trackingURL: "http://www.example.com"

  # Database connection used by Merlin backend when postgres is disabled
  # database:
  #   host: "localhost"
  #   user: "root"
  #   name: "merlin"
  #   password:
  #     secretName: "merlin-postgrsql" 
  #     secretKey: "database-password"
  #     value: "password"

postgresql:
  enabled: true
  resources:
    requests:
      cpu: 25m
      memory: 256Mi
  persistence:
    enabled: false
  postgresqlUsername: merlin
  postgresqlPassword: merlin
  postgresqlDatabase: merlin
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  replication:
    enabled: false
  initdbScriptsSecret: merlin-postgresql-mlflow-init-scripts

mlflow:
  postgresql:
    enabled: false
    postgresqlDatabase: mlflow
    postgresqlUsername: mlflow
  artifactRoot: s3://mlflow
  extraEnvs:
    # MinIO credentials
    AWS_ACCESS_KEY_ID: YOURACCESSKEY
    AWS_SECRET_ACCESS_KEY: YOURSECRETKEY
    AWS_DEFAULT_REGION: ap-southeast-2
    MLFLOW_S3_ENDPOINT_URL: http://minio.minio:9000

swagger:
  enabled: false
