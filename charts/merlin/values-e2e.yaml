merlin:
  environment: dev
  image:
    tag: 0.7.0
  # TODO: After the Merlin docker image got published, we can remove imagePullSecrets config
  imagePullSecrets:
  - name: ghcr-secret
  replicaCount: 1
  resources:
    requests:
      cpu: 25m
      memory: 128Mi
    limits:
      memory: 256Mi
  service:
    externalPort: 8080
    internalPort: 3000
  mlpApi:
    encryptionKey: password
  sentry:
    enabled: false
  newrelic:
    enabled: false
  authorization:
    enabled: false

  environmentConfigs:
  - name: e2e
    is_default: true
    cluster: e2e
    region: id
    gcp_project: gcp-project
    deployment_timeout: 10m
    namespace_timeout: 2m
    min_replica: 1
    max_replica: 1
    max_cpu: 250m
    max_memory: 256Mi
    cpu_request: 25m
    memory_request: 128Mi
    cpu_limit: 250m
    memory_limit: 256Mi
    queue_resource_percentage: 20
    is_prediction_job_enabled: true
    is_default_prediction_job: true
    prediction_job_config:
      executor_replica: 1
      driver_cpu_request: 25m
      driver_memory_request: 128Mi
      executor_cpu_request: 25m
      executor_memory_request: 128Mi

  imageBuilder:
    clusterName: "e2e"


postgresql:
  resources:
    requests:
      cpu: 25m
      memory: 256Mi
  persistence:
    enabled: false
  postgresqlUsername: merlin
  postgresqlPassword: merlin
  postgresqlDatabase: merlin
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  replication:
    enabled: false
  initdbScriptsSecret: merlin-postgresql-mlflow-init-scripts

mlflow:
  # TODO: After the MLflow docker image got published, we can remove imagePullSecrets config
  imagePullSecrets:
  - name: ghcr-secret
  postgresql:
    enabled: false
    postgresqlDatabase: mlflow
    postgresqlUsername: mlflow
  artifactRoot: s3://mlflow
  extraEnvs:
    # MinIO credentials
    AWS_ACCESS_KEY_ID: YOURACCESSKEY
    AWS_SECRET_ACCESS_KEY: YOURSECRETKEY
    MLFLOW_S3_ENDPOINT_URL: http://minio.minio:9000

swagger:
  enabled: false
