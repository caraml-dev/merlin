syntax = "proto3";

package merlin.transformer;

import "transformer/spec/feast.proto";
import "transformer/spec/table.proto";
import "transformer/spec/variable.proto";
import "transformer/spec/json.proto";
import "transformer/spec/encoder.proto";
import "transformer/spec/upi_output.proto";
import "transformer/spec/upi_autoload.proto";

option go_package = "github.com/gojek/merlin/pkg/transformer/spec";

message StandardTransformerConfig {
  TransformerConfig transformerConfig = 1;
}

message TransformerConfig {
  repeated FeatureTable feast = 1; // for backward compatibility
  Pipeline preprocess = 2;
  Pipeline postprocess = 3;
}

message Pipeline {
  repeated Input inputs = 1;
  repeated Transformation transformations = 2;
  repeated Output outputs = 3;
}

message Input {
  // Ideally, Input definition should be
  // ```
  //   oneof input {
  //     repeated Variable variables = 1;
  //     repeated FeatureTable feast = 2;
  //     repeated Table tables = 3;
  //  }
  // ```
  // however it's not possible to have repeated field in oneof
  // https://github.com/protocolbuffers/protobuf/issues/2592
  // Thus we will handle the oneof behavior in the code side
  repeated Variable variables = 1;
  repeated FeatureTable feast = 2;
  repeated Table tables = 3;
  repeated Encoder encoders = 4;
  UPIAutoload autoload = 5;
}


message Transformation {
  // Ideally, Transformation definition should be
  // ```
  //   oneof input {
  //     repeated TableJoin tableJoin = 1;
  //     repeated TableTransformation tableTransformation = 2;
  //  }
  // ```
  // however it's not possible to have repeated field in oneof
  // https://github.com/protocolbuffers/protobuf/issues/2592
  // Thus we will handle the oneof behavior in the code side
  TableJoin tableJoin = 1;
  TableTransformation tableTransformation = 2;
  repeated Variable variables = 3;
}

message Output {
  JsonOutput jsonOutput = 1;
  UPIPreprocessOutput upiPreprocessOutput = 2;
  UPIPostprocessOutput upiPostprocessOutput = 3;
}