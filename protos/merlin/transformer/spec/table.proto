syntax = "proto3";

package merlin.transformer;

import "transformer/spec/common.proto";
import "transformer/spec/scaler.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/gojek/merlin/pkg/transformer/spec";


message Table {
  string name = 1;
  BaseTable baseTable = 2;
  repeated Column columns = 3;
}

message BaseTable {
  oneof baseTable {
    FromJson fromJson = 1;
    FromTable fromTable = 2;
  }
}

message Column {
  string name = 1;
  oneof columnValue {
    FromJson fromJson = 2;
    string expression = 3;
  }
}

message TableTransformation {
  string inputTable = 1;
  string outputTable = 2;
  repeated TransformationStep steps = 3;
}

message TransformationStep {
  repeated string dropColumns = 1;
  repeated string selectColumns = 2;
  repeated SortColumnRule sort = 3;
  map<string, string> renameColumns = 4;
  repeated UpdateColumn updateColumns = 5;
  repeated ScaleColumn scaleColumns = 6;
  repeated EncodeColumn encodeColumns = 7;
  FilterRow filterRow = 8;
  SliceRow sliceRow = 9;
}

message FilterRow {
  string condition = 1;
}

message SliceRow {
  google.protobuf.Int32Value start = 1;
  google.protobuf.Int32Value end = 2;
}

message SortColumnRule {
  string column = 1;
  SortOrder order = 2;
}

enum SortOrder {
  ASC = 0;
  DESC = 1;
}

message UpdateColumn {
  string column = 1;
  string expression = 2;
  repeated ColumnCondition conditions = 3; 
}

message ColumnCondition {
  string rowSelector = 1;
  string expression = 2;
  DefaultColumnValue default = 3;
}

message DefaultColumnValue {
  string expression = 1;
}

message TableJoin {
  string leftTable = 1;
  string rightTable = 2;
  string outputTable = 3;
  JoinMethod how = 4;
  string onColumn = 5;
  repeated string onColumns = 6;
}

enum JoinMethod {
  INVALID_JOIN = 0;
  LEFT = 1;
  RIGHT = 2;
  INNER = 3;
  OUTER = 4;
  CROSS = 5;
  CONCAT = 6;
}

message ScaleColumn {
  string column = 1;
  oneof scalerConfig {
    StandardScalerConfig standardScalerConfig = 2;
    MinMaxScalerConfig minMaxScalerConfig = 3;  
  }
}

message EncodeColumn {
  repeated string columns = 1;
  string encoder = 2;
}