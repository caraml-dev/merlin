name: Merlin Release CI
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      ghcr_token:
        required: true
      pypi_username:
        required: true
      pypi_password:
        required: true

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  publish-python-sdk:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        working-directory: ./python/sdk
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.pypi_username }}
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        working-directory: ./python/sdk
        run: |
          tag=$(git describe --tags --always --first-parent)
          sed -i -e "s|VERSION = \".*\"|VERSION = \"`echo "${tag//v}"`\"|g" ./merlin/version.py
          python setup.py sdist bdist_wheel
          twine upload dist/*

  publish-api:
    runs-on: ubuntu-latest
    steps:
      - name: Download API Docker Artifact
        uses: actions/download-artifact@v2
        with:
          name: merlin.${{ inputs.version }}.tar
      - name: Retag and Push Docker Image
        run: |
          IMAGE_TAG="${{ env.DOCKER_REGISTRY }}/gojek/merlin:${{ inputs.version }}"
          docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.ghcr_token }}
          docker image load --input merlin.${{ inputs.version }}.tar
          docker tag merlin:${{ inputs.version }} ${IMAGE_TAG}
          docker push ${IMAGE_TAG}

  publish-transformer:
    runs-on: ubuntu-latest
    steps:
      - name: Download API Docker Artifact
        uses: actions/download-artifact@v2
        with:
          name: merlin-transformer.${{ inputs.version }}.tar
      - name: Retag and Push Docker Image
        run: |
          IMAGE_TAG="${{ env.DOCKER_REGISTRY }}/gojek/merlin-transformer:${{ inputs.version }}"
          docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.ghcr_token }}
          docker image load --input merlin-transformer.${{ inputs.version }}.tar
          docker tag merlin-transformer:${{ inputs.version }} ${IMAGE_TAG}
          docker push ${IMAGE_TAG}

  publish-batch-predictor:
    runs-on: ubuntu-latest
    steps:
      - name: Download API Docker Artifact
        uses: actions/download-artifact@v2
        with:
          name: merlin-pyspark-base.${{ inputs.version }}.tar
      - name: Retag and Push Docker Image
        run: |
          IMAGE_TAG="${{ env.DOCKER_REGISTRY }}/gojek/merlin-pyspark-base:${{ inputs.version }}"
          docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.ghcr_token }}
          docker image load --input merlin-pyspark-base.${{ inputs.version }}.tar
          docker tag merlin-pyspark-base:${{ inputs.version }} ${IMAGE_TAG}
          docker push ${IMAGE_TAG}
  
  publish-pyfunc:
    runs-on: ubuntu-latest
    steps:
      - name: Download API Docker Artifact
        uses: actions/download-artifact@v2
        with:
          name: merlin-pyfunc-base.${{ inputs.version }}.tar
      - name: Retag and Push Docker Image
        run: |
          IMAGE_TAG="${{ env.DOCKER_REGISTRY }}/gojek/merlin-pyfunc-base:${{ inputs.version }}"
          docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.ghcr_token }}
          docker image load --input merlin-pyfunc-base.${{ inputs.version }}.tar
          docker tag merlin-pyfunc-base:${{ inputs.version }} ${IMAGE_TAG}
          docker push ${IMAGE_TAG}
