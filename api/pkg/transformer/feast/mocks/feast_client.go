// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	feast "github.com/feast-dev/feast/sdk/go"
	mock "github.com/stretchr/testify/mock"

	serving "github.com/feast-dev/feast/sdk/go/protos/feast/serving"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Client) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetFeastServingInfo provides a mock function with given fields: ctx, in
func (_m *Client) GetFeastServingInfo(ctx context.Context, in *serving.GetFeastServingInfoRequest) (*serving.GetFeastServingInfoResponse, error) {
	ret := _m.Called(ctx, in)

	var r0 *serving.GetFeastServingInfoResponse
	if rf, ok := ret.Get(0).(func(context.Context, *serving.GetFeastServingInfoRequest) *serving.GetFeastServingInfoResponse); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*serving.GetFeastServingInfoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *serving.GetFeastServingInfoRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOnlineFeatures provides a mock function with given fields: ctx, req
func (_m *Client) GetOnlineFeatures(ctx context.Context, req *feast.OnlineFeaturesRequest) (*feast.OnlineFeaturesResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *feast.OnlineFeaturesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *feast.OnlineFeaturesRequest) *feast.OnlineFeaturesResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*feast.OnlineFeaturesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *feast.OnlineFeaturesRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
