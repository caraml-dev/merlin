transformerConfig:
  preprocess:
    inputs:
      - tables:
          - name: driver_table
            baseTable:
              fromJson:
                jsonPath: $.drivers[*]
                addRowNumber: true
      - feast:
          - tableName: driver_feature_table
            project: default
            entities:
              - name: driver_id
                valueType: STRING
                jsonPath: $.drivers[*].id
            features:
              - name: name
                valueType: STRING
                defaultValue: ""
              - name: driver_feature_1
                valueType: INT64
                defaultValue: "0"
              - name: driver_feature_2
                valueType: INT64
                defaultValue: "0"
              - name: driver_feature_3
                valueType: INT64
                defaultValue: "0"
    transformations:
      - tableTransformation:
          inputTable: driver_table
          outputTable: driver_table
          steps:
            - sort:
                - column: row_number
                  order: ASC
            - renameColumns:
                row_number: rank
                id: driver_id
      - tableJoin:
          leftTable: driver_table
          rightTable: driver_feature_table
          outputTable: result_table
          how: LEFT
          onColumns: [driver_id, name]
      - tableTransformation:
          inputTable: result_table
          outputTable: result_table
          steps:
            - updateColumns:
                - column: is_weekend
                  expression: IsWeekend(driver_table.Col('eta'), 'Asia/Jakarta')
                - column: day_of_week
                  expression: DayOfWeek(driver_table.Col('eta'), 'Asia/Jakarta')
                - column: pretty_date
                  expression: FormatTimestamp(driver_table.Col('eta'), 'Asia/Jakarta', '2006-01-02')
                - column: datetime_parsed
                  expression: ParseDateTime(driver_table.Col('pickup_time'), driver_table.Col('pickup_timezone'), '2006-01-02 15:04:05')
                - column: cumulative_fare
                  expression: CumulativeValue(driver_table.Col('fare'))
      - tableTransformation:
          inputTable: result_table
          outputTable: result_table
          steps:
            - sort:
                - column: rank
                  order: ASC
            - selectColumns:
                [
                  rank,
                  driver_id,
                  name,
                  driver_feature_1,
                  driver_feature_2,
                  driver_feature_3,
                  is_weekend,
                  day_of_week,
                  pretty_date,
                  datetime_parsed,
                  cumulative_fare,
                ]
    outputs:
      - jsonOutput:
          jsonTemplate:
            fields:
              - fieldName: instances
                fromTable:
                  tableName: result_table
                  format: SPLIT
