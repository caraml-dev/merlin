// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	mlflow "github.com/gojek/merlin/mlflow"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// CreateExperiment provides a mock function with given fields: name
func (_m *Client) CreateExperiment(name string) (string, error) {
	ret := _m.Called(name)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateRun provides a mock function with given fields: experimentID
func (_m *Client) CreateRun(experimentID string) (*mlflow.Run, error) {
	ret := _m.Called(experimentID)

	var r0 *mlflow.Run
	if rf, ok := ret.Get(0).(func(string) *mlflow.Run); ok {
		r0 = rf(experimentID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mlflow.Run)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(experimentID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
