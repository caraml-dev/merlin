/*
Merlin

API Guide for accessing Merlin's model management, deployment, and serving functionalities

API version: 0.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RegressionOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegressionOutput{}

// RegressionOutput struct for RegressionOutput
type RegressionOutput struct {
	PredictionScoreColumn *string `json:"prediction_score_column,omitempty"`
	ActualScoreColumn     *string `json:"actual_score_column,omitempty"`
}

// NewRegressionOutput instantiates a new RegressionOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegressionOutput() *RegressionOutput {
	this := RegressionOutput{}
	return &this
}

// NewRegressionOutputWithDefaults instantiates a new RegressionOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegressionOutputWithDefaults() *RegressionOutput {
	this := RegressionOutput{}
	return &this
}

// GetPredictionScoreColumn returns the PredictionScoreColumn field value if set, zero value otherwise.
func (o *RegressionOutput) GetPredictionScoreColumn() string {
	if o == nil || IsNil(o.PredictionScoreColumn) {
		var ret string
		return ret
	}
	return *o.PredictionScoreColumn
}

// GetPredictionScoreColumnOk returns a tuple with the PredictionScoreColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegressionOutput) GetPredictionScoreColumnOk() (*string, bool) {
	if o == nil || IsNil(o.PredictionScoreColumn) {
		return nil, false
	}
	return o.PredictionScoreColumn, true
}

// HasPredictionScoreColumn returns a boolean if a field has been set.
func (o *RegressionOutput) HasPredictionScoreColumn() bool {
	if o != nil && !IsNil(o.PredictionScoreColumn) {
		return true
	}

	return false
}

// SetPredictionScoreColumn gets a reference to the given string and assigns it to the PredictionScoreColumn field.
func (o *RegressionOutput) SetPredictionScoreColumn(v string) {
	o.PredictionScoreColumn = &v
}

// GetActualScoreColumn returns the ActualScoreColumn field value if set, zero value otherwise.
func (o *RegressionOutput) GetActualScoreColumn() string {
	if o == nil || IsNil(o.ActualScoreColumn) {
		var ret string
		return ret
	}
	return *o.ActualScoreColumn
}

// GetActualScoreColumnOk returns a tuple with the ActualScoreColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegressionOutput) GetActualScoreColumnOk() (*string, bool) {
	if o == nil || IsNil(o.ActualScoreColumn) {
		return nil, false
	}
	return o.ActualScoreColumn, true
}

// HasActualScoreColumn returns a boolean if a field has been set.
func (o *RegressionOutput) HasActualScoreColumn() bool {
	if o != nil && !IsNil(o.ActualScoreColumn) {
		return true
	}

	return false
}

// SetActualScoreColumn gets a reference to the given string and assigns it to the ActualScoreColumn field.
func (o *RegressionOutput) SetActualScoreColumn(v string) {
	o.ActualScoreColumn = &v
}

func (o RegressionOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegressionOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PredictionScoreColumn) {
		toSerialize["prediction_score_column"] = o.PredictionScoreColumn
	}
	if !IsNil(o.ActualScoreColumn) {
		toSerialize["actual_score_column"] = o.ActualScoreColumn
	}
	return toSerialize, nil
}

type NullableRegressionOutput struct {
	value *RegressionOutput
	isSet bool
}

func (v NullableRegressionOutput) Get() *RegressionOutput {
	return v.value
}

func (v *NullableRegressionOutput) Set(val *RegressionOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableRegressionOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableRegressionOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegressionOutput(val *RegressionOutput) *NullableRegressionOutput {
	return &NullableRegressionOutput{value: val, isSet: true}
}

func (v NullableRegressionOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegressionOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
