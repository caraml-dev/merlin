/*
Merlin

API Guide for accessing Merlin's model management, deployment, and serving functionalities

API version: 0.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AutoscalingPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoscalingPolicy{}

// AutoscalingPolicy struct for AutoscalingPolicy
type AutoscalingPolicy struct {
	MetricsType *MetricsType `json:"metrics_type,omitempty"`
	TargetValue *float32     `json:"target_value,omitempty"`
}

// NewAutoscalingPolicy instantiates a new AutoscalingPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoscalingPolicy() *AutoscalingPolicy {
	this := AutoscalingPolicy{}
	return &this
}

// NewAutoscalingPolicyWithDefaults instantiates a new AutoscalingPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoscalingPolicyWithDefaults() *AutoscalingPolicy {
	this := AutoscalingPolicy{}
	return &this
}

// GetMetricsType returns the MetricsType field value if set, zero value otherwise.
func (o *AutoscalingPolicy) GetMetricsType() MetricsType {
	if o == nil || IsNil(o.MetricsType) {
		var ret MetricsType
		return ret
	}
	return *o.MetricsType
}

// GetMetricsTypeOk returns a tuple with the MetricsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoscalingPolicy) GetMetricsTypeOk() (*MetricsType, bool) {
	if o == nil || IsNil(o.MetricsType) {
		return nil, false
	}
	return o.MetricsType, true
}

// HasMetricsType returns a boolean if a field has been set.
func (o *AutoscalingPolicy) HasMetricsType() bool {
	if o != nil && !IsNil(o.MetricsType) {
		return true
	}

	return false
}

// SetMetricsType gets a reference to the given MetricsType and assigns it to the MetricsType field.
func (o *AutoscalingPolicy) SetMetricsType(v MetricsType) {
	o.MetricsType = &v
}

// GetTargetValue returns the TargetValue field value if set, zero value otherwise.
func (o *AutoscalingPolicy) GetTargetValue() float32 {
	if o == nil || IsNil(o.TargetValue) {
		var ret float32
		return ret
	}
	return *o.TargetValue
}

// GetTargetValueOk returns a tuple with the TargetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoscalingPolicy) GetTargetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.TargetValue) {
		return nil, false
	}
	return o.TargetValue, true
}

// HasTargetValue returns a boolean if a field has been set.
func (o *AutoscalingPolicy) HasTargetValue() bool {
	if o != nil && !IsNil(o.TargetValue) {
		return true
	}

	return false
}

// SetTargetValue gets a reference to the given float32 and assigns it to the TargetValue field.
func (o *AutoscalingPolicy) SetTargetValue(v float32) {
	o.TargetValue = &v
}

func (o AutoscalingPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoscalingPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetricsType) {
		toSerialize["metrics_type"] = o.MetricsType
	}
	if !IsNil(o.TargetValue) {
		toSerialize["target_value"] = o.TargetValue
	}
	return toSerialize, nil
}

type NullableAutoscalingPolicy struct {
	value *AutoscalingPolicy
	isSet bool
}

func (v NullableAutoscalingPolicy) Get() *AutoscalingPolicy {
	return v.value
}

func (v *NullableAutoscalingPolicy) Set(val *AutoscalingPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoscalingPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoscalingPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoscalingPolicy(val *AutoscalingPolicy) *NullableAutoscalingPolicy {
	return &NullableAutoscalingPolicy{value: val, isSet: true}
}

func (v NullableAutoscalingPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoscalingPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
