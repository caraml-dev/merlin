/*
Merlin

API Guide for accessing Merlin's model management, deployment, and serving functionalities

API version: 0.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ListJobsPaginatedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListJobsPaginatedResponse{}

// ListJobsPaginatedResponse struct for ListJobsPaginatedResponse
type ListJobsPaginatedResponse struct {
	Results []PredictionJob `json:"results,omitempty"`
	Paging  *Paging         `json:"paging,omitempty"`
}

// NewListJobsPaginatedResponse instantiates a new ListJobsPaginatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListJobsPaginatedResponse() *ListJobsPaginatedResponse {
	this := ListJobsPaginatedResponse{}
	return &this
}

// NewListJobsPaginatedResponseWithDefaults instantiates a new ListJobsPaginatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListJobsPaginatedResponseWithDefaults() *ListJobsPaginatedResponse {
	this := ListJobsPaginatedResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *ListJobsPaginatedResponse) GetResults() []PredictionJob {
	if o == nil || IsNil(o.Results) {
		var ret []PredictionJob
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobsPaginatedResponse) GetResultsOk() ([]PredictionJob, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *ListJobsPaginatedResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []PredictionJob and assigns it to the Results field.
func (o *ListJobsPaginatedResponse) SetResults(v []PredictionJob) {
	o.Results = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ListJobsPaginatedResponse) GetPaging() Paging {
	if o == nil || IsNil(o.Paging) {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobsPaginatedResponse) GetPagingOk() (*Paging, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ListJobsPaginatedResponse) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *ListJobsPaginatedResponse) SetPaging(v Paging) {
	o.Paging = &v
}

func (o ListJobsPaginatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListJobsPaginatedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

type NullableListJobsPaginatedResponse struct {
	value *ListJobsPaginatedResponse
	isSet bool
}

func (v NullableListJobsPaginatedResponse) Get() *ListJobsPaginatedResponse {
	return v.value
}

func (v *NullableListJobsPaginatedResponse) Set(val *ListJobsPaginatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListJobsPaginatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListJobsPaginatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListJobsPaginatedResponse(val *ListJobsPaginatedResponse) *NullableListJobsPaginatedResponse {
	return &NullableListJobsPaginatedResponse{value: val, isSet: true}
}

func (v NullableListJobsPaginatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListJobsPaginatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
