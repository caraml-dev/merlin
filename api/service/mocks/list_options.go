// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	gorm "github.com/jinzhu/gorm"
	mock "github.com/stretchr/testify/mock"
)

// ListOptions is an autogenerated mock type for the ListOptions type
type ListOptions struct {
	mock.Mock
}

type ListOptions_apply struct {
	*mock.Call
}

func (_m ListOptions_apply) Return(_a0 *gorm.DB) *ListOptions_apply {
	return &ListOptions_apply{Call: _m.Call.Return(_a0)}
}

func (_m *ListOptions) Onapply(q *gorm.DB) *ListOptions_apply {
	c := _m.On("apply", q)
	return &ListOptions_apply{Call: c}
}

func (_m *ListOptions) OnapplyMatch(matchers ...interface{}) *ListOptions_apply {
	c := _m.On("apply", matchers...)
	return &ListOptions_apply{Call: c}
}

// apply provides a mock function with given fields: q
func (_m *ListOptions) apply(q *gorm.DB) *gorm.DB {
	ret := _m.Called(q)

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func(*gorm.DB) *gorm.DB); ok {
		r0 = rf(q)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}
