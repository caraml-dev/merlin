// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// ListOptions is an autogenerated mock type for the ListOptions type
type ListOptions struct {
	mock.Mock
}

// apply provides a mock function with given fields: q
func (_m *ListOptions) apply(q *gorm.DB) *gorm.DB {
	ret := _m.Called(q)

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func(*gorm.DB) *gorm.DB); ok {
		r0 = rf(q)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

type mockConstructorTestingTNewListOptions interface {
	mock.TestingT
	Cleanup(func())
}

// NewListOptions creates a new instance of ListOptions. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewListOptions(t mockConstructorTestingTNewListOptions) *ListOptions {
	mock := &ListOptions{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
