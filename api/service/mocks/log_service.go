// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	service "github.com/gojek/merlin/service"
	mock "github.com/stretchr/testify/mock"
)

// LogService is an autogenerated mock type for the LogService type
type LogService struct {
	mock.Mock
}

// StreamLogs provides a mock function with given fields: ctx, logLineCh, stopCh, options
func (_m *LogService) StreamLogs(ctx context.Context, logLineCh chan string, stopCh chan struct{}, options *service.LogQuery) error {
	ret := _m.Called(ctx, logLineCh, stopCh, options)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, chan string, chan struct{}, *service.LogQuery) error); ok {
		r0 = rf(ctx, logLineCh, stopCh, options)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewLogService interface {
	mock.TestingT
	Cleanup(func())
}

// NewLogService creates a new instance of LogService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLogService(t mockConstructorTestingTNewLogService) *LogService {
	mock := &LogService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
